{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Code-world\\\\React\\\\http-Api-practice\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  async function wizHandler() {\n    setIsLoading(true);\n    const response = await fetch('https://imdb8.p.rapidapi.com/auto-complete?q=game%20of%20thr', {\n      method: 'GET',\n      headers: {\n        'x-rapidapi-key': '0da7802b0fmshb9d92efa9e9f93cp12c6efjsne0b0e3f6e5c4',\n        'x-rapidapi-host': 'imdb8.p.rapidapi.com'\n      }\n    });\n    const data = await response.json();\n    console.log(data.d);\n    const formMoves = data.d.map(moves => {\n      return {\n        id: moves.id,\n        title: moves.l,\n        openingText: moves.s\n      };\n    });\n    setMovies(formMoves);\n    setIsLoading(false);\n  }\n\n  // method 1\n  // function getMoviesHandler() {\n  //   fetch('https://swapi.dev/api/films/')\n  //     .then((response) => {\n  //       return response.json();\n  //     })\n  //     .then((data) => {\n  //       const transaformedMovies = data.results.map((movieData) => {\n  //         return {\n  //           id: movieData.episode_id,\n  //           title: movieData.title,\n  //           openingText: movieData.opening_crawl,\n  //           releaseDate: movieData.release_date,\n  //         };\n  //       });\n  //       setMovies(transaformedMovies);\n  //     });\n  // }\n\n  // method 2\n  //  async function getMovieHandler() {\n  //   const response = await fetch('https://imdb236.p.rapidapi.com/api/imdb/top250-movies',{\n  //     method: 'GET',\n  //     headers: {\n  //       'x-rapidapi-key': '4f359c7e6dmsh801471f5ca99ebbp1ab93ajsn5ee7f185a49c',\n  //       'x-rapidapi-host': 'imdb236.p.rapidapi.com'\n  //     }\n  //   });\n  //   const data = await response.json();\n  //     console.log(data[0].originalTitle);\n  //     console.log(data[0]);\n  //   const transformedMovie = data.map(movieData => {\n  //     return {\n  //       id: movieData.id,\n  //       title: movieData.originalTitle,\n  //       openingText: movieData.filmingLocations,\n  //       releaseDate: movieData.releaseDate,\n  //     }\n  //   });\n  //   setMovies(transformedMovie);\n  //  };\n\n  async function GOTMoviesHandler() {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://imdb8.p.rapidapi.com/auto-complete?q=game%20of%20thr', {\n        method: 'GET',\n        headers: {\n          'x-rapidapi-key': '0da7802b0fmshb9d92efa9e9f93cp12c6efjsne0b0e3f6e5c4',\n          'x-rapidapi-host': 'imdb8.p.rapidapi.com'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n      const data = await response.json();\n      console.log(data.d);\n      const tranformedMovie = data.d.map(movieData => {\n        return {\n          id: movieData.id,\n          title: movieData.l,\n          openingText: movieData.s\n        };\n      });\n      setMovies(tranformedMovie);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }\n  let content = 'No movie found';\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 14\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 14\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: wizHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zuBJAn2dLkBMoQCfa8VUzB2Qvvo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","wizHandler","response","fetch","method","headers","data","json","console","log","d","formMoves","map","moves","id","title","l","openingText","s","GOTMoviesHandler","ok","Error","tranformedMovie","movieData","message","content","length","fileName","_jsxFileName","lineNumber","columnNumber","children","Fragment","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Code-world/React/http-Api-practice/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n\n\n  async function wizHandler() {\n    setIsLoading(true);\n\n    const response = await fetch('https://imdb8.p.rapidapi.com/auto-complete?q=game%20of%20thr', {\n        method: 'GET',\n        headers: {\n          'x-rapidapi-key': '0da7802b0fmshb9d92efa9e9f93cp12c6efjsne0b0e3f6e5c4',\n          'x-rapidapi-host': 'imdb8.p.rapidapi.com'\n          }\n    });\n    const data = await response.json();\n    console.log(data.d);\n    const formMoves = data.d.map(moves => {\n      return {\n        id:moves.id,\n        title: moves.l,\n        openingText: moves.s\n      }\n    });\n    setMovies(formMoves);\n    setIsLoading(false);\n  }\n     \n          // method 1\n  // function getMoviesHandler() {\n  //   fetch('https://swapi.dev/api/films/')\n  //     .then((response) => {\n  //       return response.json();\n  //     })\n  //     .then((data) => {\n  //       const transaformedMovies = data.results.map((movieData) => {\n  //         return {\n  //           id: movieData.episode_id,\n  //           title: movieData.title,\n  //           openingText: movieData.opening_crawl,\n  //           releaseDate: movieData.release_date,\n  //         };\n  //       });\n  //       setMovies(transaformedMovies);\n  //     });\n  // }\n\n          // method 2\n//  async function getMovieHandler() {\n//   const response = await fetch('https://imdb236.p.rapidapi.com/api/imdb/top250-movies',{\n//     method: 'GET',\n//     headers: {\n//       'x-rapidapi-key': '4f359c7e6dmsh801471f5ca99ebbp1ab93ajsn5ee7f185a49c',\n//       'x-rapidapi-host': 'imdb236.p.rapidapi.com'\n//     }\n//   });\n//   const data = await response.json();\n//     console.log(data[0].originalTitle);\n//     console.log(data[0]);\n//   const transformedMovie = data.map(movieData => {\n//     return {\n//       id: movieData.id,\n//       title: movieData.originalTitle,\n//       openingText: movieData.filmingLocations,\n//       releaseDate: movieData.releaseDate,\n//     }\n//   });\n//   setMovies(transformedMovie);\n//  };\n\nasync function GOTMoviesHandler () {\n  setIsLoading(true);\n  setError(null);\n\n  try {\n      const response = await fetch ('https://imdb8.p.rapidapi.com/auto-complete?q=game%20of%20thr', {\n        method: 'GET',\n        headers: {\n          'x-rapidapi-key': '0da7802b0fmshb9d92efa9e9f93cp12c6efjsne0b0e3f6e5c4',\n          'x-rapidapi-host': 'imdb8.p.rapidapi.com'\n          }\n      });\n      \n      if(!response.ok){\n        throw new Error('something went wrong!')\n      }\n      \n      const data = await response.json();\n      console.log(data.d);\n\n      const tranformedMovie = data.d.map(movieData => {\n        return{\n          id: movieData.id,\n          title: movieData.l,\n          openingText: movieData.s\n        }\n      });\n      setMovies(tranformedMovie);\n\n  } catch (error) {\n    setError(error.message);\n  }\n  setIsLoading(false); \n}\n\n let content = 'No movie found';\n\n if(movies.length > 0) {\n   content = <MoviesList movies={movies} />;\n }\n\n if (error) {\n   content = <p>{error}</p>;\n }\n\n if(isLoading){\n   content = <p>Loading...</p>\n }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={wizHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {/* {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && !error && <p>No movies found</p>}\n        {!isLoading && error && <p>{error}</p>}\n        {isLoading && <p>Loading...</p>} */}\n        {content}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}