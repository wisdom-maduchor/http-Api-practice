{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Code-world\\\\React\\\\http-Api-practice\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  function getMoviesHandler() {\n    // fetch('https://swapi.dev/api/films/')\n    //   .then((response) => {\n    //     return response.json();\n    //   })\n    //   .then((data) => {\n    //     const transaformedMovies = data.results.map((movieData) => {\n    //       return {\n    //         id: movieData.episode_id,\n    //         title: movieData.title,\n    //         openingText: movieData.opening_crawl,\n    //         releaseDate: movieData.release_date,\n    //       };\n    //     });\n    //     setMovies(transaformedMovies);\n    //   });\n\n    fetch('https://imdb8.p.rapidapi.com/title/v2/get-countries-of-origin?tconst=tt0120338&first=20&country=US&language=en-US', {\n      method: 'GET',\n      headers: {\n        'x-rapidapi-key': '4f359c7e6dmsh801471f5ca99ebbp1ab93ajsn5ee7f185a49c',\n        'x-rapidapi-host': 'imdb8.p.rapidapi.com'\n      }\n    }).then(response => {\n      return response.json();\n      // console.log(response);\n    }).then(data => {\n      const formed = data.title.interests.total;\n      setMovies(formed);\n      console.log(setMovies);\n    });\n  }\n\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m6SRVq9N0POigGpMlnh/6woD7xI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","getMoviesHandler","fetch","method","headers","then","response","json","data","formed","title","interests","total","console","log","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Code-world/React/http-Api-practice/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n\n  function getMoviesHandler() {\n    // fetch('https://swapi.dev/api/films/')\n    //   .then((response) => {\n    //     return response.json();\n    //   })\n    //   .then((data) => {\n    //     const transaformedMovies = data.results.map((movieData) => {\n    //       return {\n    //         id: movieData.episode_id,\n    //         title: movieData.title,\n    //         openingText: movieData.opening_crawl,\n    //         releaseDate: movieData.release_date,\n    //       };\n    //     });\n    //     setMovies(transaformedMovies);\n    //   });\n\nfetch('https://imdb8.p.rapidapi.com/title/v2/get-countries-of-origin?tconst=tt0120338&first=20&country=US&language=en-US', {\n\tmethod: 'GET',\n\theaders: {\n\t\t'x-rapidapi-key': '4f359c7e6dmsh801471f5ca99ebbp1ab93ajsn5ee7f185a49c',\n\t\t'x-rapidapi-host': 'imdb8.p.rapidapi.com'\n\t}\n})\n.then(response => {\n  return response.json();\n  // console.log(response);\n}).then(data => {\n  const formed = data.title.interests.total;\n  setMovies(formed);\n  console.log(setMovies);\n})\n\n\n  }\n\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={getMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={movies} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExC,SAASQ,gBAAgBA,CAAA,EAAG;IAC1B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEJC,KAAK,CAAC,mHAAmH,EAAE;MAC1HC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACR,gBAAgB,EAAE,oDAAoD;QACtE,iBAAiB,EAAE;MACpB;IACD,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAI;MAChB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;MACtB;IACF,CAAC,CAAC,CAACF,IAAI,CAACG,IAAI,IAAI;MACd,MAAMC,MAAM,GAAGD,IAAI,CAACE,KAAK,CAACC,SAAS,CAACC,KAAK;MACzCZ,SAAS,CAACS,MAAM,CAAC;MACjBI,OAAO,CAACC,GAAG,CAACd,SAAS,CAAC;IACxB,CAAC,CAAC;EAGA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEJ,OAAA,CAACJ,KAAK,CAACuB,QAAQ;IAAAC,QAAA,gBACbpB,OAAA;MAAAoB,QAAA,eACEpB,OAAA;QAAQqB,OAAO,EAAEhB,gBAAiB;QAAAe,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACVzB,OAAA;MAAAoB,QAAA,eACEpB,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEA;MAAO;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAACvB,EAAA,CAhEQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAkEZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}