{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Code-world\\\\React\\\\http-Api-practice\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n\n  // method 1\n  // function getMoviesHandler() {\n  //   fetch('https://swapi.dev/api/films/')\n  //     .then((response) => {\n  //       return response.json();\n  //     })\n  //     .then((data) => {\n  //       const transaformedMovies = data.results.map((movieData) => {\n  //         return {\n  //           id: movieData.episode_id,\n  //           title: movieData.title,\n  //           openingText: movieData.opening_crawl,\n  //           releaseDate: movieData.release_date,\n  //         };\n  //       });\n  //       setMovies(transaformedMovies);\n  //     });\n  // }\n\n  // method 2\n  const [film, setFilm] = useState([]);\n  async function getMovieHandler() {\n    const response = await fetch('https://imdb236.p.rapidapi.com/api/imdb/top250-movies', {\n      method: 'GET',\n      headers: {\n        'x-rapidapi-key': '4f359c7e6dmsh801471f5ca99ebbp1ab93ajsn5ee7f185a49c',\n        'x-rapidapi-host': 'imdb236.p.rapidapi.com'\n      }\n    });\n    const data = await response.json();\n    console.log(data[0].originalTitle);\n    console.log(data[0]);\n    const transformedMovie = data.map(movieData => {\n      return {\n        id: movieData.id,\n        title: movieData.originalTitle,\n        releaseDate: movieData.releaseDate\n      };\n    });\n    // console.log(transformedMovie[0]);\n    // const transformedMovie = data.results.map(movieData => {\n    //   return {\n    //     id: movieData.episode_id,\n    //     title: movieData.title,\n    //     openingText: movieData.opening_crawl,\n    //     releaseDate: movieData.release_date\n    //   }\n    // });\n    setFilm(transformedMovie);\n  }\n  ;\n\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMovieHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: film\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"H6R6vNhxsvR+lP9noj43ATBV1SE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","film","setFilm","getMovieHandler","response","fetch","method","headers","data","json","console","log","originalTitle","transformedMovie","map","movieData","id","title","releaseDate","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Code-world/React/http-Api-practice/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n     \n          // method 1\n  // function getMoviesHandler() {\n  //   fetch('https://swapi.dev/api/films/')\n  //     .then((response) => {\n  //       return response.json();\n  //     })\n  //     .then((data) => {\n  //       const transaformedMovies = data.results.map((movieData) => {\n  //         return {\n  //           id: movieData.episode_id,\n  //           title: movieData.title,\n  //           openingText: movieData.opening_crawl,\n  //           releaseDate: movieData.release_date,\n  //         };\n  //       });\n  //       setMovies(transaformedMovies);\n  //     });\n  // }\n\n          // method 2\n const [film, setFilm] = useState([]);\n\n async function getMovieHandler() {\n  const response = await fetch('https://imdb236.p.rapidapi.com/api/imdb/top250-movies',{\n    method: 'GET',\n    headers: {\n      'x-rapidapi-key': '4f359c7e6dmsh801471f5ca99ebbp1ab93ajsn5ee7f185a49c',\n      'x-rapidapi-host': 'imdb236.p.rapidapi.com'\n    }\n  });\n  const data = await response.json();\n  console.log(data[0].originalTitle);\n  console.log(data[0]);\n  const transformedMovie = data.map(movieData => {\n    return {\n      id: movieData.id,\n      title: movieData.originalTitle,\n      releaseDate: movieData.releaseDate,\n    }\n  });\n  // console.log(transformedMovie[0]);\n  // const transformedMovie = data.results.map(movieData => {\n  //   return {\n  //     id: movieData.episode_id,\n  //     title: movieData.title,\n  //     openingText: movieData.opening_crawl,\n  //     releaseDate: movieData.release_date\n  //   }\n  // });\n  setFilm(transformedMovie);\n };\n\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={getMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={film} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEhC;EACR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEQ;EACT,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,eAAeU,eAAeA,CAAA,EAAG;IAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuD,EAAC;MACnFC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,gBAAgB,EAAE,oDAAoD;QACtE,iBAAiB,EAAE;MACrB;IACF,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC,CAACI,aAAa,CAAC;IAClCF,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,MAAMK,gBAAgB,GAAGL,IAAI,CAACM,GAAG,CAACC,SAAS,IAAI;MAC7C,OAAO;QACLC,EAAE,EAAED,SAAS,CAACC,EAAE;QAChBC,KAAK,EAAEF,SAAS,CAACH,aAAa;QAC9BM,WAAW,EAAEH,SAAS,CAACG;MACzB,CAAC;IACH,CAAC,CAAC;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAhB,OAAO,CAACW,gBAAgB,CAAC;EAC1B;EAAC;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEjB,OAAA,CAACJ,KAAK,CAAC2B,QAAQ;IAAAC,QAAA,gBACbxB,OAAA;MAAAwB,QAAA,eACExB,OAAA;QAAQyB,OAAO,EAAElB,eAAgB;QAAAiB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACV7B,OAAA;MAAAwB,QAAA,eACExB,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEE;MAAK;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAAC3B,EAAA,CAhFQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAkFZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}