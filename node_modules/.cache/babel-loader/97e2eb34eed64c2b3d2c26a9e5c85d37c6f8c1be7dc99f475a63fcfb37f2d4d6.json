{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Code-world\\\\React\\\\http-Api-practice\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n\n  // method 1\n  // function getMoviesHandler() {\n  //   fetch('https://swapi.dev/api/films/')\n  //     .then((response) => {\n  //       return response.json();\n  //     })\n  //     .then((data) => {\n  //       const transaformedMovies = data.results.map((movieData) => {\n  //         return {\n  //           id: movieData.episode_id,\n  //           title: movieData.title,\n  //           openingText: movieData.opening_crawl,\n  //           releaseDate: movieData.release_date,\n  //         };\n  //       });\n  //       setMovies(transaformedMovies);\n  //     });\n  // }\n\n  // method 2\n  //  async function getMovieHandler() {\n  //   const response = await fetch('https://imdb236.p.rapidapi.com/api/imdb/top250-movies',{\n  //     method: 'GET',\n  //     headers: {\n  //       'x-rapidapi-key': '4f359c7e6dmsh801471f5ca99ebbp1ab93ajsn5ee7f185a49c',\n  //       'x-rapidapi-host': 'imdb236.p.rapidapi.com'\n  //     }\n  //   });\n  //   const data = await response.json();\n  //     console.log(data[0].originalTitle);\n  //     console.log(data[0]);\n  //   const transformedMovie = data.map(movieData => {\n  //     return {\n  //       id: movieData.id,\n  //       title: movieData.originalTitle,\n  //       openingText: movieData.filmingLocations,\n  //       releaseDate: movieData.releaseDate,\n  //     }\n  //   });\n  //   setMovies(transformedMovie);\n  //  };\n\n  async function GOTMoviesHandler() {\n    const response = await fetch('https://imdb8.p.rapidapi.com/auto-complete?q=game%20of%20thr', {\n      method: 'GET',\n      headers: {\n        'x-rapidapi-key': '0da7802b0fmshb9d92efa9e9f93cp12c6efjsne0b0e3f6e5c4',\n        'x-rapidapi-host': 'imdb8.p.rapidapi.com'\n      }\n    });\n    const data = await response.json();\n    console.log(data).d;\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: GOTMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m6SRVq9N0POigGpMlnh/6woD7xI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","GOTMoviesHandler","response","fetch","method","headers","data","json","console","log","d","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Code-world/React/http-Api-practice/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n     \n          // method 1\n  // function getMoviesHandler() {\n  //   fetch('https://swapi.dev/api/films/')\n  //     .then((response) => {\n  //       return response.json();\n  //     })\n  //     .then((data) => {\n  //       const transaformedMovies = data.results.map((movieData) => {\n  //         return {\n  //           id: movieData.episode_id,\n  //           title: movieData.title,\n  //           openingText: movieData.opening_crawl,\n  //           releaseDate: movieData.release_date,\n  //         };\n  //       });\n  //       setMovies(transaformedMovies);\n  //     });\n  // }\n\n          // method 2\n//  async function getMovieHandler() {\n//   const response = await fetch('https://imdb236.p.rapidapi.com/api/imdb/top250-movies',{\n//     method: 'GET',\n//     headers: {\n//       'x-rapidapi-key': '4f359c7e6dmsh801471f5ca99ebbp1ab93ajsn5ee7f185a49c',\n//       'x-rapidapi-host': 'imdb236.p.rapidapi.com'\n//     }\n//   });\n//   const data = await response.json();\n//     console.log(data[0].originalTitle);\n//     console.log(data[0]);\n//   const transformedMovie = data.map(movieData => {\n//     return {\n//       id: movieData.id,\n//       title: movieData.originalTitle,\n//       openingText: movieData.filmingLocations,\n//       releaseDate: movieData.releaseDate,\n//     }\n//   });\n//   setMovies(transformedMovie);\n//  };\n\nasync function GOTMoviesHandler () {\n  const response = await fetch ('https://imdb8.p.rapidapi.com/auto-complete?q=game%20of%20thr', {\n    method: 'GET',\n    headers: {\n      'x-rapidapi-key': '0da7802b0fmshb9d92efa9e9f93cp12c6efjsne0b0e3f6e5c4',\n      'x-rapidapi-host': 'imdb8.p.rapidapi.com'\n    }\n  });\n  const data = await response.json();\n  console.log(data).d;\n}\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={GOTMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={movies} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEhC;EACR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEQ;EACV;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,eAAeQ,gBAAgBA,CAAA,EAAI;IACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,8DAA8D,EAAE;MAC5FC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,gBAAgB,EAAE,oDAAoD;QACtE,iBAAiB,EAAE;MACrB;IACF,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAACI,CAAC;EACrB;EAEE,oBACEd,OAAA,CAACJ,KAAK,CAACmB,QAAQ;IAAAC,QAAA,gBACbhB,OAAA;MAAAgB,QAAA,eACEhB,OAAA;QAAQiB,OAAO,EAAEZ,gBAAiB;QAAAW,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACVrB,OAAA;MAAAgB,QAAA,eACEhB,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEA;MAAO;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAACnB,EAAA,CAnEQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAqEZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}